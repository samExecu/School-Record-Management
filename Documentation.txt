## School's Record Management System

### Introduction
This program is designed to manage student records for a school. It allows users to perform various tasks such as adding, viewing, searching, updating, and deleting student records. Additionally, it provides a feature to view records stored in a recycle bin.

### Features
1. **Add Records:** Users can input student names, classes, and roll numbers to add them to the records.
2. **View Records:** Users can view all the existing student records.
3. **Search Records:** Users can search for specific student records by name.
4. **Delete Records:** Users can delete student records based on their roll numbers and classes.
5. **Update Records:** Users can update student records, specifically changing the class from 10 to 11.
6. **View Recycle Bin:** Users can view records that have been deleted and moved to the recycle bin.
7. **Menu Navigation:** Users can easily navigate through the program using a menu system.

### File Management
- The program utilizes file handling techniques to store and retrieve student records.
- The main data file is named "Student.dat", which stores all active student records.
- Deleted records are moved to a recycle bin file named "Recycle Bin.dat".

### Usage
1. **Compilation:** The program can be compiled using any standard C compiler.
2. **Execution:** After compilation, execute the program and follow the menu options to perform various tasks.
3. **Input Format:** Users are prompted to input data in a specific format, such as name, class, and roll number.
4. **Error Handling:** The program includes error handling mechanisms to address file opening errors, invalid inputs, and other exceptions.
5. **Navigation:** Users can navigate through the program using numeric options provided in the menu.

### Dependencies
- Standard C libraries are used for input/output, file handling, string manipulation, and character handling.

### Note
- The maximum size for writing student information is limited to 50 records per launch.
- The program uses system-specific commands (`system("cls")`, `system("color")`) for screen clearing and text color manipulation, which may not be portable across all systems.

### Future Improvements
- Implementation of additional features such as sorting records, modifying existing records, or exporting data to other formats.
- Enhancing user interface with graphical elements or command-line arguments for more flexibility.
- Handling larger datasets efficiently and optimizing file operations for better performance.
